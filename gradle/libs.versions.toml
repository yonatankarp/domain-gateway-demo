[versions]
jvm = "17"
kotlin = "1.9.10"
openapi = "7.0.1"
spotless = "6.22.0"
springDependencyManagement = "1.1.3"
springboot = "3.1.4"
retrofit2 = "2.9.0"
okhttp = "4.11.0"

[libraries]

# Kotlin & Coroutines
kotlin_core =  { module = "org.jetbrains.kotlin:kotlin-stdlib" }
kotlin_jackson = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
kotlin_reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }

# Retrofit & OkHttp
retrofit2_core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2" }
retrofit2_jackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit2" }
retrofit2_scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit2" }
retrofit2_logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# Spring Boot
springboot_web_starter = { module = "org.springframework.boot:spring-boot-starter-web" }
springboot_validation_starter = { module = "org.springframework.boot:spring-boot-starter-validation" }
springboot_actuator_starter = { module = "org.springframework.boot:spring-boot-starter-actuator" }

# Tests
springboot_test_starter =  { module = "org.springframework.boot:spring-boot-starter-test" }

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin"}
kotlin_spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin"}
openapi_generator = { id = "org.openapi.generator", version.ref = "openapi" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
spring_boot = { id = "org.springframework.boot", version.ref = "springboot" }
spring_dependency_management = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }

[bundles]

kotlin_all = [
    "kotlin_core",
    "kotlin_jackson",
    "kotlin_reflect",
]

retrofit_all = [
    "retrofit2_core",
    "retrofit2_jackson",
    "retrofit2_logging"
]

springboot_all = [
    "springboot_web_starter",
    "springboot_validation_starter",
    "springboot_actuator_starter",
]

tests_all = [
    "springboot_test_starter",
]
