[versions]
coroutines = "1.8.1"
jvm = "17"
kotlin = "1.9.24"
mockk = "1.13.11"
mockkSpring = "4.0.2"
okhttp = "4.12.0"
openapi = "7.5.0"
retrofit2 = "2.11.0"
spotless = "6.25.0"
springDependencyManagement = "1.1.5"
springboot = "3.2.5"

[libraries]

# Kotlin & Coroutines
kotlin_core = { module = "org.jetbrains.kotlin:kotlin-stdlib" }
kotlin_coroutines_core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin_coroutines_reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "coroutines" }
kotlin_jackson = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
kotlin_reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }

# Retrofit & OkHttp
retrofit2_core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit2" }
retrofit2_jackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit2" }
retrofit2_logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
retrofit2_scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit2" }

# Spring Boot
springboot_actuator_starter = { module = "org.springframework.boot:spring-boot-starter-actuator" }
springboot_validation_starter = { module = "org.springframework.boot:spring-boot-starter-validation" }
springboot_web_starter = { module = "org.springframework.boot:spring-boot-starter-webflux" }

# Tests
mockk_core = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk_spring = { module = "com.ninja-squad:springmockk", version.ref = "mockkSpring" }
springboot_test_starter = { module = "org.springframework.boot:spring-boot-starter-test" }

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin_spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
openapi_generator = { id = "org.openapi.generator", version.ref = "openapi" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
spring_boot = { id = "org.springframework.boot", version.ref = "springboot" }
spring_dependency_management = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }

[bundles]

kotlin_all = [
    "kotlin_core",
    "kotlin_coroutines_core",
    "kotlin_coroutines_reactor",
    "kotlin_jackson",
    "kotlin_reflect",
]

retrofit_all = [
    "retrofit2_core",
    "retrofit2_jackson",
    "retrofit2_logging",
]

springboot_all = [
    "springboot_actuator_starter",
    "springboot_validation_starter",
    "springboot_web_starter",
]

tests_all = [
    "mockk_core",
    "mockk_spring",
    "springboot_test_starter",
]
